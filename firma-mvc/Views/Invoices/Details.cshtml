@model firma_mvc.Invoice

@{
    ViewData["Title"] = "Details";
}

<h2>Faktura</h2>

<div>
    <h4>Nr @Html.DisplayFor(model => model.Number) z dnia @Html.DisplayFor(model => model.DateOfIssue)</h4>
    <hr />
    <dl class="dl-horizontal">
        @*<dt>
            @Html.DisplayNameFor(model => model.Number)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Number)
        </dd>*@
        @*<dt>
            @Html.DisplayNameFor(model => model.DateOfIssue)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.DateOfIssue)
        </dd>*@
        <dt>
            @Html.DisplayNameFor(model => model.Contractor.NIP)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Contractor.NIP)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Contractor.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Contractor.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.TotalValue)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.TotalValue)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.TotalValueInclVat)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.TotalValueInclVat)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ItemsCount)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ItemsCount)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PaymentMethod)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PaymentMethod.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.InvoiceStatus.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.InvoiceStatus.Name)
        </dd>
    </dl>
</div>

@*@await Html.PartialAsync("InvoiceItemsPartial", Model.InvoiceItems)*@

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("#")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Item.Name)*@
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Quantity)*@
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Item.Price)*@
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Item.PriceBrutto)*@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            if (Model.InvoiceItems != null)
            {
                int i = 1;
                foreach (var item in Model.InvoiceItems)
                {
                    <tr>
                        <td>
                            @i
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Item.PriceBrutto)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                    i++;
                }
            }
        }
    </tbody>
</table>

<a asp-area="" asp-controller="InvoiceItems" asp-action="Create" asp-route-InvoiceId="@Model.Id" class="btn btn-default">Dodaj pozycję</a>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
