@model firma_mvc.Invoice

@{
    ViewData["Title"] = "Details";
    string statusName = Model.InvoiceStatus.Name;
    string btnDisabled = string.Empty;
    string addBtnToggle = "modal";

    if (statusName != "nowa")
    {
        btnDisabled = " disabled";
        addBtnToggle = string.Empty;
    }
}

<div class="container-fluid">
    <div class="row">
        @*@await Html.PartialAsync("SideMenuPartial")*@
        <div class="col">
            <br />
            <p>
                <button type="button" class="btn btn-outline-success @btnDisabled" data-toggle=@addBtnToggle data-target="#addInvoiceItem">
                    Dodaj pozycję
                </button>

                @{
                    if (Model.InvoiceStatus.Name == "nowa")
                    {
                        @Html.ActionLink("Zatwierdź", "Confirm", new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-outline-primary"})
                    }
                    else
                    {
                        @Html.ActionLink("Odtwierdź", "Confirm", new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-outline-primary"})
                    }
                }
                @Html.ActionLink("Opłacona", "SetPaid", new { invoiceId = Model.Id }, htmlAttributes: new { @class = "btn btn-outline-info" })
                @Html.ActionLink("Drukuj", "GenerateInvoice", new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-outline-dark" })
                @Html.ActionLink("Edytuj", "Edit", new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-outline-warning" + btnDisabled })
                @Html.ActionLink("Korekta", "Create", new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-outline-danger" })
            </p>

            <div class="modal fade" id="addInvoiceItem" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Dodaj pozycję do faktury</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            @await Component.InvokeAsync("AddInvoiceItem", new InvoiceItem(Model.Id))
                        </div>
                    </div>
                </div>
            </div>

            <div class="card bg-light">
                <div class="card-header"><strong>Faktura nr @Model.Number</strong></div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6 col-md-4"><strong>@Html.DisplayNameFor(model => model.DateOfIssue)</strong></div>
                        <div class="col-6 col-md-4"><strong>@Html.DisplayNameFor(model => model.InvoiceStatus.Name)</strong></div>
                        <div class="col-6 col-md-4"><strong>@Html.DisplayNameFor(model => model.Paid)</strong></div>
                    </div>
                    <div class="row">
                        @{
                            string badgeStyle = string.Empty;
                            if (statusName == "nowa")
                            {
                                badgeStyle = "badge-primary";
                            }
                            else if (statusName == "zatwierdzona")
                            {
                                badgeStyle = "badge-success";
                            }
                        }

                        @{
                            string paidBadgeStyle = string.Empty;
                            string paidText = string.Empty;
                            if (Model.Paid)
                            {
                                paidBadgeStyle = "badge-success";
                                paidText = "tak";
                            }
                            else
                            {
                                paidBadgeStyle = "badge-danger";
                                paidText = "nie";
                            }
                        }

                        <div class="col-6 col-md-4">@Html.DisplayFor(model => model.DateOfIssue)</div>
                        <div class="col-6 col-md-4"><span class="badge @badgeStyle">@statusName</span></div>
                        <div class="col-6 col-md-4"><span class="badge @paidBadgeStyle">@paidText</span></div>
                    </div>
                    <div class="row">
                        <div class="col-6 col-md-4"><strong>@Html.DisplayNameFor(model => model.Contractor.NIP)</strong></div>
                        <div class="col-12 col-md-8"><strong>@Html.DisplayNameFor(model => model.Contractor)</strong></div>
                    </div>
                    <div class="row">
                        <div class="col-6 col-md-4">@Html.DisplayFor(model => model.Contractor.NIP)</div>
                        <div class="col-12 col-md-8">@Html.DisplayFor(model => model.Contractor.FullName)</div>
                    </div>
                    <div class="row">
                        <div class="col-6 col-md-4"><strong>@Html.DisplayNameFor(model => model.TotalValue)</strong></div>
                        <div class="col-6 col-md-4"><strong>@Html.DisplayNameFor(model => model.TotalValueInclVat)</strong></div>
                    </div>
                    <div class="row">
                        <div class="col-6 col-md-4">@Html.DisplayFor(model => model.TotalValue)</div>
                        <div class="col-6 col-md-4">@Html.DisplayFor(model => model.TotalValueInclVat)</div>
                    </div>
                    <div class="row">
                        <div class="col-6 col-md-4"><strong>@Html.DisplayNameFor(model => model.PaymentMethod)</strong></div>
                        <div class="col-6 col-md-4"><strong>@Html.DisplayNameFor(model => model.PaymentMethod.DueTerm)</strong></div>
                    </div>
                    <div class="row">
                        <div class="col-6 col-md-4">@Html.DisplayFor(model => model.PaymentMethod.Name)</div>
                        <div class="col-6 col-md-4">@Html.DisplayFor(model => model.PaymentDueTerm)</div>
                    </div>
                </div>
            </div>

            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>
                            L.p.
                        </th>
                        <th>
                            @Html.DisplayName("Nazwa")
                        </th>
                        <th>
                            @Html.DisplayName("Ilość")
                        </th>
                        <th>
                            @Html.DisplayName("Jednostka")
                        </th>
                        <th>
                            @Html.DisplayName("Cena netto")
                        </th>
                        <th>
                            @Html.DisplayName("Wartość netto")
                        </th>
                        <th>
                            @Html.DisplayName("Stawka VAT")
                        </th>
                        <th>
                            @Html.DisplayName("Wartość VAT")
                        </th>
                        <th>
                            @Html.DisplayName("Wartość brutto")
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        if (Model.InvoiceItems != null)
                        {
                            int i = 1;
                            foreach (var item in Model.InvoiceItems)
                            {
                                <tr class="table-light" onclick="location.href = '@Url.Action("Edit", "InvoiceItems",new { id = item.Id})'">
                                    <td>
                                        @i
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Quantity)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.UnitOfMeasureShortName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Price)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TotalPrice)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.VATValue)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TotalVATValue)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TotalPriceBrutto)
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                    }
                </tbody>
            </table>

            <div>
                <a asp-action="Index">Powrót</a>
            </div>
        </div>
    </div>
</div>