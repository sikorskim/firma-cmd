@model IEnumerable<firma_mvc.VAT7>

@{
    ViewData["Title"] = "Index";
}
<p>
    <h2>Rozliczenie podatku VAT</h2>
</p>

<div class="my-2">
    <button type="button" class="btn btn-outline-success" data-toggle="modal" data-target="#exampleModal">
        Oblicz
    </button>

    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Oblicz podatek VAT</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        @await Html.PartialAsync("CreatePartial", @ViewData["VAT7"])
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<table  class="table table-hover table-responsive">
    <thead class="thead-light">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Month)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Value)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Paid)
            </th>
        </tr>
    </thead>
    <tbody>
        @{ 
            decimal totalValue = 0;
        }
@foreach (var item in Model) {
        <tr onclick="location.href = '@Url.Action("Details", new { id = item.Id })'">
            <td>
                @Html.DisplayFor(modelItem => item.Month)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Value)
            </td>
            <td>
                @if (item.Paid)
                {
                    <span class="badge badge-success">Opłacone</span>
                }
                else
                {
                    <span class="badge badge-danger">Do zapłaty</span>
                }
            </td>
        </tr>
    totalValue += item.Value;
}
        <tr class="table-active">
            <td>
                Razem
            </td>
            <td>
                @Tools.decimalRound(totalValue)
            </td>
            <td></td>
        </tr>
    </tbody>
</table>
