@model IEnumerable<firma_mvc.VATRegisterBuy>

@{
    ViewData["Title"] = "Index";
}

<p>
    <h2>Rejestr VAT zakupu</h2>
</p>

<div class="form-row align-items-center">
    <div class="my-2">
        <button type="button" class="btn btn-outline-success" data-toggle="modal" data-target="#exampleModal">
            Dodaj
        </button>

        <!-- Modal -->
        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Dodaj wpis do rejestru VAT zakupu</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="container-fluid">
                            @await Html.PartialAsync("CreatePartial.cshtml", @ViewData["VATRegisterBuy"])
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-1">
        <select id="yearDropDown" class="custom-select" asp-items="ViewBag.Year"></select>
    </div>
    <div class="col-sm-1">
        <select id="monthDropDown" class="custom-select" asp-items="ViewBag.Month"></select>
    </div>

    @Html.ActionLink("Drukuj", "GenerateVATRegister", new { year = ViewBag.SelectedYear, month=ViewBag.SelectedMonth }, htmlAttributes: new { @class = "btn btn-outline-dark" })
</div>

    <table class="table table-responsive table-hover table-bordered">
        <thead class="thead-light">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Number)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DeliveryDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateOfIssue)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DocumentNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Contractor)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ValueBrutto)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ValueNetto)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TaxDeductibleValue)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TaxFreeBuysValue)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NoTaxDeductibleBuysValue)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="table-light" onclick="location.href = '@Url.Action("Details", "VATRegisterBuys",new { id = item.Id})'">
                    <td>
                        @Html.DisplayFor(modelItem => item.Number)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeliveryDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOfIssue)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DocumentNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Contractor.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ValueBrutto)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ValueNetto)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TaxDeductibleValue)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TaxFreeBuysValue)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NoTaxDeductibleBuysValue)
                    </td>
                </tr>
            }
        </tbody>
    </table>
